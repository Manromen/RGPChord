SOURCE_PATH=../source/
LOG_SOURCE_PATH=../rgp-log/source/

CC=clang
CXX=clang++
CFLAGS=-W -Wall -Wextra -pedantic -x c -std=c11 -I $(LOG_SOURCE_PATH)
CXXFLAGS=-W -Wall -Wextra -pedantic -std=c++11 -stdlib=libc++ -I $(LOG_SOURCE_PATH)
LIBS=
OBJECTS=
EXECUTABLE_NAME=chord

# architecture
#ARCH=-arch i386
#CFLAGS += -D IA32
#CXXFLAGS += -D IA32
ARCH=-arch x86_64
CFLAGS += -D AMD64
CXXFLAGS += -D AMD64

# enable debug mode
CFLAGS += -DDEBUG -g -O0
CXXFLAGS += -DDEBUG -g -O0

# classes
OBJECTS += log.o
OBJECTS += chord.o
OBJECTS += chord-data.o
OBJECTS += chord-node.o
OBJECTS += test.o

all: linker

# classes
log.o: $(LOG_SOURCE_PATH)RGP-Log.cpp $(LOG_SOURCE_PATH)RGP-Log.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o log.o $(LOG_SOURCE_PATH)RGP-Log.cpp $(LIBS)

chord.o: $(SOURCE_PATH)Chord.cpp $(SOURCE_PATH)Chord.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o chord.o $(SOURCE_PATH)Chord.cpp $(LIBS)

chord-data.o: $(SOURCE_PATH)ChordData.cpp $(SOURCE_PATH)ChordData.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o chord-data.o $(SOURCE_PATH)ChordData.cpp $(LIBS)

chord-node.o: $(SOURCE_PATH)ChordNode.cpp $(SOURCE_PATH)ChordNode.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o chord-node.o $(SOURCE_PATH)ChordNode.cpp $(LIBS)

test.o: $(SOURCE_PATH)test.cpp
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o test.o $(SOURCE_PATH)test.cpp $(LIBS)

# linker
linker: $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(ARCH) -o $(EXECUTABLE_NAME) $(OBJECTS) $(LIBS)

clean:
	rm -f *.o *~ $(EXECUTABLE_NAME)
